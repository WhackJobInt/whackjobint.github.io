{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Postal3Script? Postal3Script, or P3S, is a scripting language developed for Postal 3, designed to handle most of the NPC AI and mission scripting. It allows for a much easier and faster time scripting missions and AI logic rather than messing around in C++ and doing mission logic entirely through map entities. With Postal3Script, you can easily do many things that you normally would not be able to do without the source code of the game due to the many useful functions that are interfaced. P3S script files are located in \"/Postal III/p3/scripts\" and use the \".p3s\" file extension. To load and be able to use a p3s script, you must add it to a manifest, in \"ai_scripts.txt\", found in the previously mentioned folder. Changes to p3s scripts will automatically hotload when the map restarts, so you can just use the \"restart\" console command without ever having to exit and reload the game. Postal3Script Example: Constants { Const DONUTS_INCR,1 Const SOMEBODY_STOLE_MY_DONUTS,15 Const YES,1 Const NO,0 } behavior { name bh_evensuperioractor inherited bh_mysuperioractor States { st_mycustomstate { Group Alert Patterns { pt_default { // Only executes when on Alert } } } st_nowyallgonnapay { Group Combat Patterns { pt_default { // Only executes when in Combat SetAttr \"veryverypissedoff YES\" Pattern pt_donuts } pt_donuts { IfAttr \"veryverypissedoff == YES Pattern st_nowyallgonnapay.pt_allgood\" } pt_allgood { SetAttr \"veryverypissedoff NO\" } } } events { OnDeath \"ExecutePattern st_OnDeath.pt_default\" OnTimer_tUnstun \"Pattern pt_end\" OnUnconscious \"Pattern pt_unconscious\" OnHostaged \"Pattern pt_hostaged\" OnSprayStunned \"Timer tUnstun,SPRAY_UNSTUN_TIMER\" OnTimer_tScream \"ExecutePattern .xpt_SayScream\" OnUnstunned \"Pattern pt_end\" OnStandUpEnd \"Pattern pt_end\" } // Sets on spawn st_init { Group Neutral Patterns { pt_default { actions { Senses false } } } } // Called continously st_start { Group Neutral Patterns { pt_default { actions { // tick } } } } } } Limitations Each state can hold events, which in turn can execute patterns. Patterns can be inherited from other P3S actors, as well as Attributes. * In Postal3Script, Attributes can only be whole numbers/integers, attributes can't be floats, doubles and strings. * An Attribute must have a value initialized before checking it's value using CheckAttr, meaning an attribute that doesn't exist will never return a valid value. (Checking if it's zero/null doesn't work). * You can only have a limited number of if statements in a single state or pattern. Debugging code Normally the game doesn't print out any errors, you need to have the \"developer\" and \"p3_fsm_spew\" console commands enabled. Scrolling around in the console should show you which script and what lines have errors. If you want to print out your own debug messages, You'll have to settle for doing EntFireInput on the point_clientcommand in the map via \"EntFireInput pcc,Command: echo yourmessagehere\". Debug channel specific ShowMessages are broken it seems. Unused Postal3Script files Trashmasters have left many p3s scripts that were used during the development of Postal III just sitting around. Many of them contain cut features, unused logic, and various tests. 'ai_badger_test.p3s' - Badger testing 'ai_cashmart.p3s' - Earlier version of Cashmart (ai_cashmart_npc.p3s is not unused) 'ai_gameplay.p3s' - Intended for Open World gameplay 'ai_patrol1_citizen_fight.p3s' - Unknown 'ai_st1_common.p3s' - Contains various old code 'ai_st2_states.p3s' - Contains various old code 'ai_st3_social.p3s' - Contains experimental old code 'ai_st4_queuie.p3s' - Queue testing 'ai_st5_temp.p3s' - Contains test code, scrapped features 'ai_st6_missions.p3s' - Test code related to missions 'ai_st7_environment.p3s' - Code related to cut environment behavior 'ai_st8_items.p3s' - Code related to cut inventory items 'ai_st9_animals.p3s' - Animals test 'ai_st10_temp.p3s' - Test script, contains code related to Traffic lights 'ai_st11_urza.p3s' - Contains scrapped features, old code 'ai_st12_urza.p3s' - Contains scrapped features, old code 'ai_st98_helicopter.p3s' - Code that's identical to today's Helicopter AI 'ai_st_utilities.p3s' - Various code related to NPCs 'ai_test_babuska.p3s' - Test script 'lean_test.p3s' - Test script","title":"What is Postal3Script?"},{"location":"#what-is-postal3script","text":"Postal3Script, or P3S, is a scripting language developed for Postal 3, designed to handle most of the NPC AI and mission scripting. It allows for a much easier and faster time scripting missions and AI logic rather than messing around in C++ and doing mission logic entirely through map entities. With Postal3Script, you can easily do many things that you normally would not be able to do without the source code of the game due to the many useful functions that are interfaced. P3S script files are located in \"/Postal III/p3/scripts\" and use the \".p3s\" file extension. To load and be able to use a p3s script, you must add it to a manifest, in \"ai_scripts.txt\", found in the previously mentioned folder. Changes to p3s scripts will automatically hotload when the map restarts, so you can just use the \"restart\" console command without ever having to exit and reload the game.","title":"What is Postal3Script?"},{"location":"TBD/","text":"Not Finished This page of Postal3Script is not finished yet!","title":"OpenDialog (YesNo)"},{"location":"TBD/#not-finished","text":"This page of Postal3Script is not finished yet!","title":"Not Finished"},{"location":"attributes/","text":"Attributes In Postal3Script you are able to set or check Attributes, and execute states according to the results. All attributes in Postal3Script are integers only. When checking against multiple attributes at once you can use 'and' IfAttr Checks an Attribute or Object. The Attribute or Object MUST exist. st_IfAttrTutorial { Group Neutral Patterns { pt_default { actions { // Check for my faction, if it's Zealots then I love animals IfAttr \"ea_faction == Faction:Zealots SetAttr LoveAnimals 1\" // My target is the player, so I will hate them IfAttr \"Object:target == Object:player SetAttr HatesPlayer 1\" // I have no ranged weapon, but I do have a melee weapon, then I'll bring up my weapon IfAttr \"HasWeapon:Ranged == 0 and HasWeapon:melee > 0 Block begin\" IfAttr \"HasWeapon:melee != 2 SetAttr WeaponChanged 1\" Weapon select,melee SetAttr \"ea_status sPUNISHER\" Block end // Player is forgiven according to the timer IfAttr \"Timer:tForgivePlayer < = 0 Pattern pt_end\" // State didn't execute from the Player, returning from this point IfAttr \"Object:caller != Object:player Return 1\" // My target loves animals?? No way! IfAttr \"target.LoveAnimals == 1 Return 1\" // My enemy of my enemy... is my enemy now! IfAttr \"target.Object:target != Object:null Block begin\" AssistTarget 1 Block end // My target is the Player, and they have their python out IfAttr \"Object:target == Object:player and target.ea_games == 1 State so_seepiss\" } } } } SetAttr Creates and sets a new attribute's value Constants { Const YES,1 Const NO,0 } st_SetAttrTutorial { Group Neutral Patterns { pt_default { actions { SetAttr \"IamTheDevil 666\" // Supports constants SetAttr \"y_Yes YES\" SetAttr \"n_No NO\" SetAttr \"ea_status sNEUTRAL\" SetAttr \"reaction RE_NONE\" // Randomize non-existent attributes // Maximum possible is 100 // Second value should always be zero SetAttr \"rnd 0,0,100\" SetAttr \"rndtwo 25,0,75\" // Sets other object's attribute SetAttr \"target.cr_demo YES\" SetAttr \"caller.cr_demo NO\" } } } } CheckAttr Checks if an Attribute is equal to or greater than 1 st_CheckAttrTutorial { Group Neutral Patterns { pt_default { actions { CheckAttr \"flag_static Return 1\" CheckAttr \"greet_sleazy Say SLEEZ\" CheckAttr \"AnimalNotCat Say LIKESANIMAL\" CheckAttr \"AnimalCat Say LIKESANIMAL,LIKESCAT\" } } } } ChangeAttr Changes an already existing Attribute's value, increasing, decreasing, multiplying, or by halving Halving will clamp the value to integer (5 / 2 wouldn't be '2.5', but '3') st_ChangeAttrTutorial { Group Neutral Patterns { pt_default { actions { // Randomization ChangeAttr \"poo_rnd 0:100\" ChangeAttr \"combat_rnd 0:1\" ChangeAttr \"DonutsIHave +1\" ChangeAttr \"PooIGive -1\" ChangeAttr \"Multiply *5\" ChangeAttr \"Halve /5\" // Change Health on the fly ChangeAttr \"ea_health +25\" } } } } RemoveAttr Removes an already existing Attribute from existence st_RemoveAttrTutorial { Group Neutral Patterns { pt_default { actions { RemoveAttr \"flag_PlayerFriendly\" RemoveAttr \"poo_rnd\" RemoveAttr \"IamTheDevil\" } } } }","title":"IfAttr, SetAttr, CheckAttr, ChangeAttr, RemoveAttr"},{"location":"attributes/#attributes","text":"In Postal3Script you are able to set or check Attributes, and execute states according to the results. All attributes in Postal3Script are integers only. When checking against multiple attributes at once you can use 'and'","title":"Attributes"},{"location":"faction/","text":"Faction Factions/Squads in Postal III are Half-Life 2 squads One Squad can hold 32 NPCs in one map, if it's higher than 32, problems might occur. st_FactionTutorial { Group Neutral Patterns { pt_default { actions { // Here you can find all the Factions defined in Vanilla Postal III IfAttr \"ea_faction == Faction:Police Return 1\" IfAttr \"ea_faction == Faction:Zealots Return 1\" IfAttr \"ea_faction == Faction:Citizens Return 1\" IfAttr \"ea_faction == Faction:Hobos Return 1\" IfAttr \"ea_faction == Faction:Animals Return 1\" IfAttr \"ea_faction == Faction:Player Return 1\" IfAttr \"ea_faction == Faction:LaserDot Return 1\" IfAttr \"ea_faction == Faction:Effects Return 1\" IfAttr \"ea_faction == Faction:Items Return 1\" IfAttr \"ea_faction == Faction:Taliban Return 1\" IfAttr \"ea_faction == Faction:Venezuela Return 1\" IfAttr \"ea_faction == Faction:ZombieBoss Return 1\" // used by flag_zombie (Boss NPCs) // Factions are independent from Squads // Setting a Squad in an NPC SetSquad tutorial_squad // Making another Squad an enemy SetSquadRelation player_squad:enemy // You can also do value after declaring enemy (todo: what does it do?) SetSquadRelation player_squad:enemy:4 } } } }","title":"Faction"},{"location":"faction/#faction","text":"Factions/Squads in Postal III are Half-Life 2 squads One Squad can hold 32 NPCs in one map, if it's higher than 32, problems might occur. st_FactionTutorial { Group Neutral Patterns { pt_default { actions { // Here you can find all the Factions defined in Vanilla Postal III IfAttr \"ea_faction == Faction:Police Return 1\" IfAttr \"ea_faction == Faction:Zealots Return 1\" IfAttr \"ea_faction == Faction:Citizens Return 1\" IfAttr \"ea_faction == Faction:Hobos Return 1\" IfAttr \"ea_faction == Faction:Animals Return 1\" IfAttr \"ea_faction == Faction:Player Return 1\" IfAttr \"ea_faction == Faction:LaserDot Return 1\" IfAttr \"ea_faction == Faction:Effects Return 1\" IfAttr \"ea_faction == Faction:Items Return 1\" IfAttr \"ea_faction == Faction:Taliban Return 1\" IfAttr \"ea_faction == Faction:Venezuela Return 1\" IfAttr \"ea_faction == Faction:ZombieBoss Return 1\" // used by flag_zombie (Boss NPCs) // Factions are independent from Squads // Setting a Squad in an NPC SetSquad tutorial_squad // Making another Squad an enemy SetSquadRelation player_squad:enemy // You can also do value after declaring enemy (todo: what does it do?) SetSquadRelation player_squad:enemy:4 } } } }","title":"Faction"},{"location":"manner/","text":"Manner Manner alters the behavior of NPCs heavily, for e.g. they are less likely to attack a Cop than the Player. Manner bias towards other NPC must be researched to fully understand it st_MannerTutorial { Group Neutral Patterns { pt_default { actions { // Here you can find all the Manners defined in Vanilla Postal III IfAttr \"ea_Manner == Manner:Player Return 1\" IfAttr \"ea_Manner == Manner:StreetBro Return 1\" IfAttr \"ea_Manner == Manner:JusticeMan Return 1\" IfAttr \"ea_Manner == Manner:StGranny Return 1\" IfAttr \"ea_Manner == Manner:LameWanker Return 1\" IfAttr \"ea_Manner == Manner:SoccerMom Return 1\" IfAttr \"ea_Manner == Manner:CuteGirl Return 1\" IfAttr \"ea_Manner == Manner:Vendor Return 1\" IfAttr \"ea_Manner == Manner:RedNeck Return 1\" IfAttr \"ea_Manner == Manner:SushiNinja Return 1\" IfAttr \"ea_Manner == Manner:Girl Return 1\" IfAttr \"ea_Manner == Manner:MedicDoc Return 1\" IfAttr \"ea_Manner == Manner:StrayDog Return 1\" IfAttr \"ea_Manner == Manner:MonkeyApe Return 1\" IfAttr \"ea_Manner == Manner:PussyCat Return 1\" IfAttr \"ea_Manner == Manner:JihadBeard Return 1\" IfAttr \"ea_Manner == Manner:RhinoCow Return 1\" IfAttr \"ea_Manner == Manner:LaserDot Return 1\" IfAttr \"ea_Manner == Manner:Mission Return 1\" IfAttr \"ea_Manner == Manner:Pigeon Return 1\" IfAttr \"ea_Manner == Manner:GayGuy Return 1\" IfAttr \"ea_Manner == Manner:NerdyNerd Return 1\" IfAttr \"ea_Manner == Manner:Bystander Return 1\" } } } }","title":"Manner"},{"location":"manner/#manner","text":"Manner alters the behavior of NPCs heavily, for e.g. they are less likely to attack a Cop than the Player. Manner bias towards other NPC must be researched to fully understand it st_MannerTutorial { Group Neutral Patterns { pt_default { actions { // Here you can find all the Manners defined in Vanilla Postal III IfAttr \"ea_Manner == Manner:Player Return 1\" IfAttr \"ea_Manner == Manner:StreetBro Return 1\" IfAttr \"ea_Manner == Manner:JusticeMan Return 1\" IfAttr \"ea_Manner == Manner:StGranny Return 1\" IfAttr \"ea_Manner == Manner:LameWanker Return 1\" IfAttr \"ea_Manner == Manner:SoccerMom Return 1\" IfAttr \"ea_Manner == Manner:CuteGirl Return 1\" IfAttr \"ea_Manner == Manner:Vendor Return 1\" IfAttr \"ea_Manner == Manner:RedNeck Return 1\" IfAttr \"ea_Manner == Manner:SushiNinja Return 1\" IfAttr \"ea_Manner == Manner:Girl Return 1\" IfAttr \"ea_Manner == Manner:MedicDoc Return 1\" IfAttr \"ea_Manner == Manner:StrayDog Return 1\" IfAttr \"ea_Manner == Manner:MonkeyApe Return 1\" IfAttr \"ea_Manner == Manner:PussyCat Return 1\" IfAttr \"ea_Manner == Manner:JihadBeard Return 1\" IfAttr \"ea_Manner == Manner:RhinoCow Return 1\" IfAttr \"ea_Manner == Manner:LaserDot Return 1\" IfAttr \"ea_Manner == Manner:Mission Return 1\" IfAttr \"ea_Manner == Manner:Pigeon Return 1\" IfAttr \"ea_Manner == Manner:GayGuy Return 1\" IfAttr \"ea_Manner == Manner:NerdyNerd Return 1\" IfAttr \"ea_Manner == Manner:Bystander Return 1\" } } } }","title":"Manner"},{"location":"object/","text":"Object In Postal3Script you have access to certain pointers which helps you with targeting the correct actor. st_ObjectTutorial { Group Neutral Patterns { pt_default { actions { // In P3S you can check for the following objects: // 'Object:Caller' ; 'Object:Target' ; 'Object:Player' // 'Object:slot#0' ; 'Object:null' ; 'Object:self' // 'Object:item' ; 'Object:anchor' // You don't always have a pointer to the Caller, as it's // heavily dependent on the Event which caused the NPC to enter this state // Meaning, there's something or someone that forced the NPC to enter this state // Check if our caller exists (null means zero) IfAttr \"Object:caller != Object:null Block Begin\" // Was it the Player who forced us into this state? IfAttr \"Object:caller == Object:player Block Begin\" // Well then we are going to run to them, endlessly TargetPlayer 1 // or TargetCaller 1 MoveToTarget run,1,0 Block End Block End // Check if our target isn't the Player IfAttr \"Object:target != Object:null and Object:target != Object:Player Block Begin\" // Bad day for our enemy, though, because they are going to die instantly ChangeAttr \"target.ea_health -target.ea_health\" Block End // Object:self and Object:item are barely used, the latter is used by Motorhead // It's a pointer to the NPC's held item // Check out ai_motorhead.p3s, ai_st1_common.p3s, ai_st2_states.p3s // and ai_st7_environment.p3s // Object:anchor is used only in ai_mission_jwb.p3s (todo: what the hell it is?) // Object:slot#0 // This can save any Object to memory, it was heavily used by Trashmasters when making missions // Get entity named 'gameplay' and set it as target TargetEntByName gameplay // Save the target to memory TargetToMem msGP // Reset the target ResetTarget 1 // Memory numbers // 6 and 7 are unused, you can only use a maximum number of 10 slots // Using a number higher than 9 and lower than 0 will cause it to go -1 // which will be invalid // (from ai_st_init.p3s) // Const msTEMP,0 // Const msOWNER,1 // Const msTARGET,2 // Const msENEMY,3 // Const msSUSPECTED,4 // Const msLEADER,5 ////Const msDRIVEN,6 ////Const msINTEREST,7 // Const msKILLER,8 // Const msGP,9 // And if we needed the saved target from memory, just do TargetFromMem msGP // Example from ai_mission_mlg.p3s IfAttr \"Object:caller == Object:Player ChangeAttr slot#msGP.Totaldead +1\" // And again, if we don't need it anymore we reset the target ResetTarget 1 } } } }","title":"Object"},{"location":"object/#object","text":"In Postal3Script you have access to certain pointers which helps you with targeting the correct actor. st_ObjectTutorial { Group Neutral Patterns { pt_default { actions { // In P3S you can check for the following objects: // 'Object:Caller' ; 'Object:Target' ; 'Object:Player' // 'Object:slot#0' ; 'Object:null' ; 'Object:self' // 'Object:item' ; 'Object:anchor' // You don't always have a pointer to the Caller, as it's // heavily dependent on the Event which caused the NPC to enter this state // Meaning, there's something or someone that forced the NPC to enter this state // Check if our caller exists (null means zero) IfAttr \"Object:caller != Object:null Block Begin\" // Was it the Player who forced us into this state? IfAttr \"Object:caller == Object:player Block Begin\" // Well then we are going to run to them, endlessly TargetPlayer 1 // or TargetCaller 1 MoveToTarget run,1,0 Block End Block End // Check if our target isn't the Player IfAttr \"Object:target != Object:null and Object:target != Object:Player Block Begin\" // Bad day for our enemy, though, because they are going to die instantly ChangeAttr \"target.ea_health -target.ea_health\" Block End // Object:self and Object:item are barely used, the latter is used by Motorhead // It's a pointer to the NPC's held item // Check out ai_motorhead.p3s, ai_st1_common.p3s, ai_st2_states.p3s // and ai_st7_environment.p3s // Object:anchor is used only in ai_mission_jwb.p3s (todo: what the hell it is?) // Object:slot#0 // This can save any Object to memory, it was heavily used by Trashmasters when making missions // Get entity named 'gameplay' and set it as target TargetEntByName gameplay // Save the target to memory TargetToMem msGP // Reset the target ResetTarget 1 // Memory numbers // 6 and 7 are unused, you can only use a maximum number of 10 slots // Using a number higher than 9 and lower than 0 will cause it to go -1 // which will be invalid // (from ai_st_init.p3s) // Const msTEMP,0 // Const msOWNER,1 // Const msTARGET,2 // Const msENEMY,3 // Const msSUSPECTED,4 // Const msLEADER,5 ////Const msDRIVEN,6 ////Const msINTEREST,7 // Const msKILLER,8 // Const msGP,9 // And if we needed the saved target from memory, just do TargetFromMem msGP // Example from ai_mission_mlg.p3s IfAttr \"Object:caller == Object:Player ChangeAttr slot#msGP.Totaldead +1\" // And again, if we don't need it anymore we reset the target ResetTarget 1 } } } }","title":"Object"},{"location":"spclattributes/","text":"Engine Attributes Some of the engine's internal variables are exposed to Postal3Script, e.g. Health. These special Attributes are named as ea_* These attributes are heavily tied to the engine, breaking or changing them in an unnatural way is not advised. st_SpecialAttrTutorial { Group Neutral Patterns { pt_default { actions { // Special damage absorptions SetAttr \"ea_dmg_absorb 70\" SetAttr \"ea_bulletdmg_absorb 90\" SetAttr \"ea_clubdmg_absorb 70\" SetAttr \"ea_flamedmg_absorb 20\" SetAttr \"ea_blastdmg_absorb 30\" SetAttr \"ea_krotchydmg_absorb 100\" SetAttr \"ea_flamedmg_absorb 100\" SetAttr \"ea_physdmg_absorb 90\" SetAttr \"ea_blast_immune 1\" // NPC cannot do crit damage (kinda like in TF2) SetAttr \"ea_crit_disabled 1\" // NPC Faction check, please look at Factions IfAttr \"ea_faction == Faction:Police SetAttr tutorial_imacop 1\" // Health, if set to 0 NPC or Player will die IfAttr \"ea_health < 55 SetAttr tutorial_imwounded 1\" // NPC cannot be picked up (mainly used by Cats) SetAttr \"ea_takeable 0\" // NPC is no longer tased SetAttr \"ea_tased 0\" // NPC Manner, please look at Manners IfAttr \"ea_Manner == Manner:JusticeMan State bh_human:st_attack_melee\" // NPC Status, mainly used to determine if they are holding dangerous weapons SetAttr \"ea_status sNEUTRAL\" IfAttr \"ea_armed == WPN_M16 SetAttr NumAmmo AMMO_M16_MAX\" IfAttr \"ea_ActiveWeapon == Weapon:Ranged Aim true,false\" IfAttr \"ea_NumEnemies == 0 and ea_NumFear == 0 SetAttr tutorial_calm 1\" IfAttr \"ea_NumVisibleEnemy == 0 SetAttr TaskCombat TC_SEARCH\" // NPC will disappear if Player is too far away SetAttr \"ea_autokill 0\" // No gibbing SetAttr \"ea_no_gibs 1\" // Used for Segways IfAttr \"ea_lean != 1 Pattern pt_lean_in\" // NPC's Hammer name IfAttr \"ea_name == String:npc_pizza_vendor SetAttr cr_vendor 1\" // Ammo IfAttr \"ea_HaveAmmo == 0 Pattern pt_reload\" // Gibs CheckAttr \"ea_gibs\" } } } }","title":"Engine Attributes (ea_* ..)"},{"location":"spclattributes/#engine-attributes","text":"Some of the engine's internal variables are exposed to Postal3Script, e.g. Health. These special Attributes are named as ea_* These attributes are heavily tied to the engine, breaking or changing them in an unnatural way is not advised. st_SpecialAttrTutorial { Group Neutral Patterns { pt_default { actions { // Special damage absorptions SetAttr \"ea_dmg_absorb 70\" SetAttr \"ea_bulletdmg_absorb 90\" SetAttr \"ea_clubdmg_absorb 70\" SetAttr \"ea_flamedmg_absorb 20\" SetAttr \"ea_blastdmg_absorb 30\" SetAttr \"ea_krotchydmg_absorb 100\" SetAttr \"ea_flamedmg_absorb 100\" SetAttr \"ea_physdmg_absorb 90\" SetAttr \"ea_blast_immune 1\" // NPC cannot do crit damage (kinda like in TF2) SetAttr \"ea_crit_disabled 1\" // NPC Faction check, please look at Factions IfAttr \"ea_faction == Faction:Police SetAttr tutorial_imacop 1\" // Health, if set to 0 NPC or Player will die IfAttr \"ea_health < 55 SetAttr tutorial_imwounded 1\" // NPC cannot be picked up (mainly used by Cats) SetAttr \"ea_takeable 0\" // NPC is no longer tased SetAttr \"ea_tased 0\" // NPC Manner, please look at Manners IfAttr \"ea_Manner == Manner:JusticeMan State bh_human:st_attack_melee\" // NPC Status, mainly used to determine if they are holding dangerous weapons SetAttr \"ea_status sNEUTRAL\" IfAttr \"ea_armed == WPN_M16 SetAttr NumAmmo AMMO_M16_MAX\" IfAttr \"ea_ActiveWeapon == Weapon:Ranged Aim true,false\" IfAttr \"ea_NumEnemies == 0 and ea_NumFear == 0 SetAttr tutorial_calm 1\" IfAttr \"ea_NumVisibleEnemy == 0 SetAttr TaskCombat TC_SEARCH\" // NPC will disappear if Player is too far away SetAttr \"ea_autokill 0\" // No gibbing SetAttr \"ea_no_gibs 1\" // Used for Segways IfAttr \"ea_lean != 1 Pattern pt_lean_in\" // NPC's Hammer name IfAttr \"ea_name == String:npc_pizza_vendor SetAttr cr_vendor 1\" // Ammo IfAttr \"ea_HaveAmmo == 0 Pattern pt_reload\" // Gibs CheckAttr \"ea_gibs\" } } } }","title":"Engine Attributes"}]}